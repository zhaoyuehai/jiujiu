{"version":3,"sources":["Main.js","App.js","reportWebVitals.js","index.js"],"names":["Option","Select","Dragger","Upload","columns","title","dataIndex","key","render","startTime","color","icon","CheckCircleOutlined","ExclamationCircleOutlined","endTime","jiaBan","radioOptions","label","value","Main","props","getInfo","setState","loading","axios","get","then","response","data","code","state","filterName","filterType","sourceList","allList","nameSet","Set","map","item","index","push","name","classNum","date","startTime1","startResult1","endTime1","endResult1","desc","add","list","newFilterName","has","filter","names","Array","from","catch","handleUploaderChange","info","file","status","message","success","error","onSelectChange","doFilter","onRadioChange","target","this","uploadProps","action","maxCount","progress","strokeColor","strokeWidth","format","percent","parseFloat","toFixed","className","onChange","InboxOutlined","defaultValue","style","width","Group","marginLeft","options","optionType","buttonStyle","type","shape","SyncOutlined","onClick","dataSource","bordered","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2096d0a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { Divider, Button, message, Select, Table, Tag, Upload, Radio } from \"antd\";\r\nimport { InboxOutlined, CheckCircleOutlined, ExclamationCircleOutlined, SyncOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\nconst columns = [\r\n    {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: '日期',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n    },\r\n    {\r\n        title: '班次',\r\n        dataIndex: 'classNum',\r\n        key: 'classNum',\r\n    }, {\r\n        title: '上班打卡',\r\n        dataIndex: 'startTime',\r\n        key: 'startTime',\r\n        render: startTime => (\r\n            <span>\r\n                <Tag color='geekblue' key={startTime[0]}>\r\n                    {startTime[0]}\r\n                </Tag>\r\n                <Tag\r\n                    key={startTime[1]}\r\n                    icon={startTime[1] === '正常' ? <CheckCircleOutlined /> : <ExclamationCircleOutlined />}\r\n                    color={startTime[1] === '正常' ? 'success' : 'warning'} >\r\n                    {startTime[1]}\r\n                </Tag>\r\n            </span>\r\n        ),\r\n    }, {\r\n        title: '下班打卡',\r\n        dataIndex: 'endTime',\r\n        key: 'endTime',\r\n        render: endTime =>\r\n            <span>\r\n                <Tag color='geekblue' key={endTime[0]}>\r\n                    {endTime[0]}\r\n                </Tag>\r\n                <Tag\r\n                    key={endTime[1]}\r\n                    icon={endTime[1] === '正常' ? <CheckCircleOutlined /> : <ExclamationCircleOutlined />}\r\n                    color={endTime[1] === '正常' ? 'success' : 'warning'} >\r\n                    {endTime[1]}\r\n                </Tag>\r\n            </span>\r\n    }, {\r\n        title: '加班时长',\r\n        dataIndex: 'jiaBan',\r\n        key: 'jiaBan',\r\n        render: jiaBan => jiaBan === null ? '' : <Tag color='red'>{jiaBan}</Tag>\r\n    }, {\r\n        title: '解释',\r\n        dataIndex: 'desc',\r\n        key: 'desc',\r\n    },\r\n];\r\n\r\nconst radioOptions = [\r\n    { label: '全部数据', value: 1 },\r\n    { label: '只看正常', value: 2 },\r\n    { label: '只看异常', value: 3 },\r\n    { label: '只看有加班', value: 4 },]\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName: 'all',\r\n            filterType: 1,\r\n            allList: [],\r\n            list: [],\r\n            names: []\r\n        }\r\n    }\r\n\r\n    getInfo = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        axios.get('http://localhost:8080/api/v1/info').then((response) => {\r\n            if (response.data.code === '10000') {\r\n                const { filterName, filterType } = this.state\r\n                let sourceList = response.data.data\r\n                let allList = []\r\n                let nameSet = new Set()\r\n                sourceList.map((item, index) => {\r\n                    allList.push({\r\n                        key: index,\r\n                        name: item.name,\r\n                        classNum: item.classNum,\r\n                        date: item.date,\r\n                        startTime: [item.startTime1, item.startResult1],\r\n                        endTime: [item.endTime1, item.endResult1],\r\n                        jiaBan: item.jiaBan,\r\n                        desc: item.desc,\r\n                    })\r\n                    item.name && nameSet.add(item.name)\r\n                })\r\n                let list = allList\r\n                let newFilterName = filterName\r\n                if (nameSet.has(newFilterName)) {\r\n                    list = list.filter(item => item.name === newFilterName)\r\n                } else {\r\n                    newFilterName = 'all'//刷新之后找不到已选的姓名\r\n                }\r\n                if (filterType === 2) {\r\n                    list = list.filter(item => item.startTime[1] === '正常' && item.endTime[1] === '正常')\r\n                } else if (filterType === 3) {\r\n                    list = list.filter(item => item.startTime[1] !== '正常' || item.endTime[1] !== '正常')\r\n                } else if (filterType === 4) {\r\n                    list = list.filter(item => item.jiaBan !== null)\r\n                }\r\n                this.setState({\r\n                    loading: false,\r\n                    allList: allList,\r\n                    list: list,\r\n                    filterName: filterName,\r\n                    names: Array.from(nameSet),\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    loading: false,\r\n                })\r\n            }\r\n        }).catch((response) => {\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n        })\r\n    }\r\n    handleUploaderChange = (info) => {\r\n        // if (info.file.status !== 'uploading') {\r\n        //     console.log(info.file, info.fileList);\r\n        // }\r\n        if (info.file.status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully`);\r\n            this.getInfo()\r\n        } else if (info.file.status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    }\r\n    onSelectChange = value => {\r\n        this.setState({\r\n            filterName: value,\r\n            list: this.doFilter(value, this.state.filterType)\r\n        })\r\n    }\r\n    onRadioChange = value => {\r\n        this.setState({\r\n            filterType: value.target.value,\r\n            list: this.doFilter(this.state.filterName, value.target.value)\r\n        })\r\n    }\r\n    doFilter = (filterName, filterType) => {\r\n        let list = filterName === 'all' ? this.state.allList : this.state.allList.filter(item => item.name === filterName)//过滤姓名\r\n        if (filterType === 2) {\r\n            list = list.filter(item => item.startTime[1] === '正常' && item.endTime[1] === '正常')\r\n        } else if (filterType === 3) {\r\n            list = list.filter(item => item.startTime[1] !== '正常' || item.endTime[1] !== '正常')\r\n        } else if (filterType === 4) {\r\n            list = list.filter(item => item.jiaBan !== null)\r\n        }\r\n        return list\r\n    }\r\n    componentDidMount() {\r\n        this.getInfo()\r\n    }\r\n\r\n    render() {\r\n        const uploadProps = {\r\n            name: 'file',\r\n            action: 'http://localhost:8080/api/v1/upload/excel',\r\n            maxCount: [1],\r\n            progress: {\r\n                strokeColor: {\r\n                    '0%': '#108ee9',\r\n                    '100%': '#87d068',\r\n                },\r\n                strokeWidth: 3,\r\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\r\n            },\r\n\r\n        }\r\n        const { loading, filterName, filterType, list, names } = this.state\r\n        return <div className='main'>\r\n            <div className='uploadFile'>\r\n                <Dragger {...uploadProps} onChange={this.handleUploaderChange}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">点击或者拖拽Excel文件到这里</p>\r\n                </Dragger>\r\n            </div>\r\n            <Divider />\r\n            <Select defaultValue={filterName} style={{ width: 120 }} onChange={this.onSelectChange}>\r\n                <Option value=\"all\">全部员工</Option>\r\n                {names.map(name => (<Option key={name} value={name}>{name}</Option>))}\r\n            </Select>\r\n            <Radio.Group\r\n                style={{ marginLeft: 20 }}\r\n                onChange={this.onRadioChange}\r\n                options={radioOptions}\r\n                value={filterType}\r\n                optionType=\"button\"\r\n                buttonStyle=\"solid\"\r\n            />\r\n            <Button style={{ marginLeft: 20 }} loading={loading} type='primary' shape='circle' icon={<SyncOutlined />} onClick={this.getInfo} />\r\n            <Divider />\r\n            <Table\r\n                dataSource={list}\r\n                columns={columns}\r\n                bordered\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport './App.css';\r\nimport Main from \"./Main\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Main/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}