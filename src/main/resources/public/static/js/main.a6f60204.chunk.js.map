{"version":3,"sources":["component/BaseUrlForm.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["getBaseUrl","localStorage","getItem","BaseUrlForm","useState","urlEditEnable","setValue","initialValues","baseUrl","layout","requiredMark","onFinish","values","url","setItem","onValuesChange","Item","label","name","rules","required","pattern","message","style","width","type","shape","icon","ReloadOutlined","htmlType","Option","Select","Dragger","Upload","columns","title","dataIndex","key","render","startTime","color","CheckCircleOutlined","ExclamationCircleOutlined","endTime","jiaBan","radioOptions","value","Main","props","getInfo","setState","loading","axios","get","then","response","data","code","state","filterName","filterType","sourceList","allList","nameSet","Set","map","item","index","push","classNum","date","startTime1","startResult1","endTime1","endResult1","desc","add","list","newFilterName","has","filter","names","Array","from","catch","handleUploaderChange","info","file","status","success","error","onSelectChange","doFilter","onRadioChange","target","this","uploadProps","action","maxCount","progress","strokeColor","strokeWidth","format","percent","parseFloat","toFixed","className","display","flexDirection","justifyContent","onChange","InboxOutlined","defaultValue","Group","marginLeft","options","optionType","buttonStyle","SyncOutlined","onClick","dataSource","bordered","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6f60204.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { ReloadOutlined } from '@ant-design/icons'\n\nconst getBaseUrl = () => localStorage.getItem('baseUrl') || 'http://localhost:8099'\n\nconst setBaseUrl = (url) => {\n    localStorage.setItem('baseUrl', url)\n}\n\nconst BaseUrlForm = () => {\n    const [urlEditEnable, setValue] = useState(false)\n    return (\n        <Form\n            initialValues={{ baseUrl: getBaseUrl() }}\n            layout=\"inline\"\n            requiredMark={false}\n            onFinish={values => {\n                setBaseUrl(values.baseUrl)\n                setValue(false)\n            }}\n            onValuesChange={(values) => setValue(values.baseUrl !== getBaseUrl())}>\n            <Form.Item label='服务器地址：' name='baseUrl'\n                rules={[{\n                    required: true,\n                    pattern: /(http|https):\\/\\/([\\w.]+\\/?)\\S*/,\n                    message: '格式不对...',\n                }]}>\n                <Input style={{ width: 200 }} type='text' />\n            </Form.Item>\n            <Form.Item>\n                {urlEditEnable && <Button shape='circle' icon={<ReloadOutlined />} type='primary'\n                    htmlType='submit' />}\n            </Form.Item>\n        </Form>\n    )\n}\nexport { getBaseUrl, BaseUrlForm }","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { Divider, Button, message, Select, Table, Tag, Upload, Radio } from \"antd\";\r\nimport { InboxOutlined, CheckCircleOutlined, ExclamationCircleOutlined, SyncOutlined } from \"@ant-design/icons\";\r\nimport { getBaseUrl, BaseUrlForm } from './component/BaseUrlForm';\r\n\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\nconst columns = [\r\n    {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: '日期',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n    },\r\n    {\r\n        title: '班次',\r\n        dataIndex: 'classNum',\r\n        key: 'classNum',\r\n    }, {\r\n        title: '上班打卡',\r\n        dataIndex: 'startTime',\r\n        key: 'startTime',\r\n        render: startTime => (\r\n            <span>\r\n                <Tag color='geekblue' key={startTime[0]}>\r\n                    {startTime[0]}\r\n                </Tag>\r\n                <Tag\r\n                    key={startTime[1]}\r\n                    icon={startTime[1] === '正常' ? <CheckCircleOutlined /> : <ExclamationCircleOutlined />}\r\n                    color={startTime[1] === '正常' ? 'success' : 'warning'} >\r\n                    {startTime[1]}\r\n                </Tag>\r\n            </span>\r\n        ),\r\n    }, {\r\n        title: '下班打卡',\r\n        dataIndex: 'endTime',\r\n        key: 'endTime',\r\n        render: endTime =>\r\n            <span>\r\n                <Tag color='geekblue' key={endTime[0]}>\r\n                    {endTime[0]}\r\n                </Tag>\r\n                <Tag\r\n                    key={endTime[1]}\r\n                    icon={endTime[1] === '正常' ? <CheckCircleOutlined /> : <ExclamationCircleOutlined />}\r\n                    color={endTime[1] === '正常' ? 'success' : 'warning'} >\r\n                    {endTime[1]}\r\n                </Tag>\r\n            </span>\r\n    }, {\r\n        title: '加班时长',\r\n        dataIndex: 'jiaBan',\r\n        key: 'jiaBan',\r\n        render: jiaBan => jiaBan === null ? '' : <Tag color='red'>{jiaBan}</Tag>\r\n    }, {\r\n        title: '解释',\r\n        dataIndex: 'desc',\r\n        key: 'desc',\r\n    },\r\n];\r\n\r\nconst radioOptions = [\r\n    { label: '全部数据', value: 1 },\r\n    { label: '只看正常', value: 2 },\r\n    { label: '只看异常', value: 3 },\r\n    { label: '只看有加班', value: 4 },]\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName: 'all',\r\n            filterType: 1,\r\n            allList: [],\r\n            list: [],\r\n            names: []\r\n        }\r\n    }\r\n\r\n    getInfo = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        axios.get(`${getBaseUrl()}/api/v1/info`).then((response) => {\r\n            if (response.data.code === '10000') {\r\n                const { filterName, filterType } = this.state\r\n                let sourceList = response.data.data\r\n                let allList = []\r\n                let nameSet = new Set()\r\n                sourceList.map((item, index) => {\r\n                    allList.push({\r\n                        key: index,\r\n                        name: item.name,\r\n                        classNum: item.classNum,\r\n                        date: item.date,\r\n                        startTime: [item.startTime1, item.startResult1],\r\n                        endTime: [item.endTime1, item.endResult1],\r\n                        jiaBan: item.jiaBan,\r\n                        desc: item.desc,\r\n                    })\r\n                    item.name && nameSet.add(item.name)\r\n                })\r\n                let list = allList\r\n                let newFilterName = filterName\r\n                if (nameSet.has(newFilterName)) {\r\n                    list = list.filter(item => item.name === newFilterName)\r\n                } else {\r\n                    newFilterName = 'all'//刷新之后找不到已选的姓名\r\n                }\r\n                if (filterType === 2) {\r\n                    list = list.filter(item => item.startTime[1] === '正常' && item.endTime[1] === '正常')\r\n                } else if (filterType === 3) {\r\n                    list = list.filter(item => item.startTime[1] !== '正常' || item.endTime[1] !== '正常')\r\n                } else if (filterType === 4) {\r\n                    list = list.filter(item => item.jiaBan !== null)\r\n                }\r\n                this.setState({\r\n                    loading: false,\r\n                    allList: allList,\r\n                    list: list,\r\n                    filterName: filterName,\r\n                    names: Array.from(nameSet),\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    loading: false,\r\n                })\r\n            }\r\n        }).catch((response) => {\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n        })\r\n    }\r\n    handleUploaderChange = (info) => {\r\n        // if (info.file.status !== 'uploading') {\r\n        //     console.log(info.file, info.fileList);\r\n        // }\r\n        if (info.file.status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully`);\r\n            this.getInfo()\r\n        } else if (info.file.status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    }\r\n    onSelectChange = value => {\r\n        this.setState({\r\n            filterName: value,\r\n            list: this.doFilter(value, this.state.filterType)\r\n        })\r\n    }\r\n    onRadioChange = value => {\r\n        this.setState({\r\n            filterType: value.target.value,\r\n            list: this.doFilter(this.state.filterName, value.target.value)\r\n        })\r\n    }\r\n    doFilter = (filterName, filterType) => {\r\n        let list = filterName === 'all' ? this.state.allList : this.state.allList.filter(item => item.name === filterName)//过滤姓名\r\n        if (filterType === 2) {\r\n            list = list.filter(item => item.startTime[1] === '正常' && item.endTime[1] === '正常')\r\n        } else if (filterType === 3) {\r\n            list = list.filter(item => item.startTime[1] !== '正常' || item.endTime[1] !== '正常')\r\n        } else if (filterType === 4) {\r\n            list = list.filter(item => item.jiaBan !== null)\r\n        }\r\n        return list\r\n    }\r\n    componentDidMount() {\r\n        this.getInfo()\r\n    }\r\n\r\n    render() {\r\n        const uploadProps = {\r\n            name: 'file',\r\n            action: `${getBaseUrl()}/api/v1/upload/excel`,\r\n            maxCount: [1],\r\n            progress: {\r\n                strokeColor: {\r\n                    '0%': '#108ee9',\r\n                    '100%': '#87d068',\r\n                },\r\n                strokeWidth: 3,\r\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\r\n            },\r\n\r\n        }\r\n        const { loading, filterName, filterType, list, names } = this.state\r\n        return <div className='main'>\r\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                <div className='uploadFile'>\r\n                    <Dragger {...uploadProps} onChange={this.handleUploaderChange}>\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">点击或者拖拽Excel文件到这里</p>\r\n                    </Dragger>\r\n                </div>\r\n                <BaseUrlForm />\r\n            </div>\r\n            <Divider />\r\n            <Select defaultValue={filterName} style={{ width: 120 }} onChange={this.onSelectChange}>\r\n                <Option value=\"all\">全部员工</Option>\r\n                {names.map(name => (<Option key={name} value={name}>{name}</Option>))}\r\n            </Select>\r\n            <Radio.Group\r\n                style={{ marginLeft: 20 }}\r\n                onChange={this.onRadioChange}\r\n                options={radioOptions}\r\n                value={filterType}\r\n                optionType=\"button\"\r\n                buttonStyle=\"solid\"\r\n            />\r\n            <Button style={{ marginLeft: 20 }} loading={loading} type='primary' shape='circle' icon={<SyncOutlined />} onClick={this.getInfo} />\r\n            <Divider />\r\n            <Table\r\n                dataSource={list}\r\n                columns={columns}\r\n                bordered\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport './App.css';\r\nimport Main from \"./Main\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Main/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}